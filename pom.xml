<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
>
   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>net.rlviana</groupId>
      <artifactId>rlviana-common</artifactId>
      <version>0.0.1-SNAPSHOT</version>
   </parent>
   <groupId>net.rlviana.pricegrabber</groupId>
   <artifactId>pricegrabber</artifactId>
   <packaging>pom</packaging>
   <name>pricegrabber</name>
   <description>Contains parent porm for pricegrabber project. Inherits from common POM.</description>
   <!-- Build properties -->
   <properties>
      <!-- JAXB Tools plugins -->
      <plugin.jaxb2.codehaus.version>1.6</plugin.jaxb2.codehaus.version>
      <plugin.jaxb2.jvnet.version>0.8.3</plugin.jaxb2.jvnet.version>
      <plugin.jaxb2.version>1.6</plugin.jaxb2.version>
      <plugin.jaxws.version>2.2.1</plugin.jaxws.version>
      <plugin.jaxb2-basics.version>0.6.5</plugin.jaxb2-basics.version>
      <!-- JSON Support Jackson -->
      <jackson2.version>2.2.3</jackson2.version>
      <!-- javax.persistence version -->
      <javax.persistence.version>2.1.0</javax.persistence.version>
      <!-- javax.servlet version -->
      <javax.servlet.version>3.0.1</javax.servlet.version>
      <!-- DB for development & unit testing -->
      <bonecp.version>0.8.0.RELEASE</bonecp.version>
      <derby.version>10.10.1.1</derby.version>
      <!-- Jetty Servlet container for development & unit testing -->
      <jetty.version>9.1.0.v20131115</jetty.version>
      <!-- Spring version -->
      <springframework.version>3.2.3.RELEASE</springframework.version>
      <springframework.security.version>3.1.4.RELEASE</springframework.security.version>
      <!-- Unit testing -->
      <dbunit.version>2.4.9</dbunit.version>
      <spring-test-dbunit.version>1.0.1</spring-test-dbunit.version>
      <!-- CGlib -->
      <cglib.version>2.2.2</cglib.version>
      <!-- Pricegrabber version -->
      <pricegrabber.version>${project.version}</pricegrabber.version>
      <!-- QA configuration properties -->
      <maven-checkstyle-plugin.configLocation>${project.build.directory}/generated-config/config/checkstyle/checkstyle.xml</maven-checkstyle-plugin.configLocation>      
      <maven-checkstyle-exclude-plugin.configLocation>${project.build.directory}/generated-config/config/checkstyle/suppression-files.xml</maven-checkstyle-exclude-plugin.configLocation>      
      <maven-pmd-plugin.configLocation>${project.build.directory}/generated-config/config/pmd/pmd-ruleset.xml</maven-pmd-plugin.configLocation>
      <maven.findbugs-include-plugin.configLocation></maven.findbugs-include-plugin.configLocation>
      <maven.findbugs-exclude-plugin.configLocation>${project.build.directory}/generated-config/config/findbugs/findbugs-exclude.xml</maven.findbugs-exclude-plugin.configLocation>
      <!-- Git access -->
      <repository.domain>github.com</repository.domain>
      <repository.user>rlviana</repository.user>
      <repository.name>pricegrabber</repository.name>
   </properties>
   <dependencyManagement>
      <dependencies>
         <!-- servlet reference implementation -->
         <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>${javax.servlet.version}</version>
            <scope>provided</scope>
         </dependency>
         <!-- jpa reference implementation -->
         <dependency>
            <groupId>org.eclipse.persistence</groupId>
            <artifactId>javax.persistence</artifactId>
            <version>${javax.persistence.version}</version>
            <scope>provided</scope>
         </dependency>
         <!-- spring context -->
         <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${springframework.version}</version>
            <scope>runtime</scope>
            <exclusions>
               <!-- Exclude Commons Logging in favor of SLF4j -->
               <exclusion>
                  <groupId>commons-logging</groupId>
                  <artifactId>commons-logging</artifactId>
               </exclusion>
            </exclusions>
         </dependency>
         <!-- Spring jpa support -->
         <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-orm</artifactId>
            <version>${springframework.version}</version>
         </dependency>
         <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
            <version>${springframework.version}</version>
         </dependency>
         <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-tx</artifactId>
            <version>${springframework.version}</version>
         </dependency>
         <!-- spring mvc -->
         <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <version>${springframework.version}</version>
         </dependency>
         <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>${springframework.version}</version>
         </dependency>
         <!-- Spring security -->
         <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-core</artifactId>
            <version>${springframework.security.version}</version>
         </dependency>
         <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-config</artifactId>
            <version>${springframework.security.version}</version>
         </dependency>
         <!-- Spring web security -->
         <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-web</artifactId>
            <version>${springframework.security.version}</version>
         </dependency>
         <!-- cglib Since (@Configuration is used) -->
         <dependency>
            <groupId>cglib</groupId>
            <artifactId>cglib-nodep</artifactId>
            <version>${cglib.version}</version>
         </dependency>
         <!-- Bridges for slf4j -->
         <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>${slf4j.version}</version>
         </dependency>
         <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>Jul-to-slf4j</artifactId>
            <version>${slf4j.version}</version>
         </dependency>
         <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>log4j-over-slf4j</artifactId>
            <version>${slf4j.version}</version>
         </dependency>
         <!-- Spring testing -->
         <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${springframework.version}</version>
            <scope>test</scope>
            <exclusions>
               <exclusion>
                  <groupId>commons-logging</groupId>
                  <artifactId>commons-logging</artifactId>
               </exclusion>
            </exclusions>
         </dependency>
         <!-- slf4j Log configuration over logback -->
         <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
         </dependency>
         <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback.version}</version>
         </dependency>
         <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-core</artifactId>
            <version>${logback.version}</version>
         </dependency>
         <!-- the core, which includes Streaming API, shared low-level abstractions (but NOT data-binding) -->
         <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>${jackson2.version}</version>
         </dependency>
         <!-- Just the annotations; use this dependency if you want to attach annotations to classes 
            without connecting them to the code. -->
         <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>${jackson2.version}</version>
         </dependency>
         <!-- databinding; ObjectMapper, JsonNode and related classes are here -->
         <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson2.version}</version>
         </dependency>
         <!-- smile (binary JSON). Other artifacts in this group do other formats. -->
         <dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-smile</artifactId>
            <version>${jackson2.version}</version>
         </dependency>
         <!-- JAX-RS provider -->
         <dependency>
            <groupId>com.fasterxml.jackson.jaxrs</groupId>
            <artifactId>jackson-jaxrs-json-provider</artifactId>
            <version>${jackson2.version}</version>
         </dependency>
         <!-- Support for JAX-B annotations as additional configuration -->
         <dependency>
            <groupId>com.fasterxml.jackson.module</groupId>
            <artifactId>jackson-module-jaxb-annotations</artifactId>
            <version>${jackson2.version}</version>
         </dependency>
         <!-- db for development and testing -->
         <dependency>
            <groupId>com.jolbox</groupId>
            <artifactId>bonecp</artifactId>
            <version>${bonecp.version}</version>
         </dependency>
         <!-- Database for testing in memory -->
         <dependency>
            <groupId>org.apache.derby</groupId>
            <artifactId>derby</artifactId>
            <version>${derby.version}</version>
            <scope>test</scope>
         </dependency>
         <!-- Client JDBC driver -->
         <dependency>
            <groupId>org.apache.derby</groupId>
            <artifactId>derbyclient</artifactId>
            <version>${derby.version}</version>
            <scope>test</scope>
         </dependency>
         <!-- JEtty dependency -->
         <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-server</artifactId>
            <version>${jetty.version}</version>
            <scope>test</scope>
         </dependency>
         <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-webapp</artifactId>
            <version>${jetty.version}</version>
            <scope>test</scope>
         </dependency>
         <!-- Unit testing -->
         <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
         </dependency>
         <!-- DBUnit -->
         <dependency>
            <groupId>org.dbunit</groupId>
            <artifactId>dbunit</artifactId>
            <version>${dbunit.version}</version>
            <scope>test</scope>
            <exclusions>
               <exclusion>
                  <artifactId>junit</artifactId>
                  <groupId>junit</groupId>
               </exclusion>
            </exclusions>
         </dependency>
         <!-- Spring test dbUnit -->
         <dependency>
         <groupId>com.github.springtestdbunit</groupId>
         <artifactId>spring-test-dbunit</artifactId>
         <version>${spring-test-dbunit.version}</version>
         <scope>test</scope>
         </dependency>
         <!-- Module dependencies -->
      <dependency>
         <groupId>net.rlviana.pricegrabber</groupId>
         <artifactId>pricegrabber-domain</artifactId>
         <version>${pricegrabber.version}</version>
      </dependency>
      <dependency>
         <groupId>net.rlviana.pricegrabber</groupId>
         <artifactId>pricegrabber-model</artifactId>
         <version>${pricegrabber.version}</version>
      </dependency>
      </dependencies>
   </dependencyManagement>
   <dependencies>
      <!-- Unit testing -->
      <dependency>
         <groupId>junit</groupId>
         <artifactId>junit</artifactId>
      </dependency>
      <dependency>
         <groupId>net.rlviana.build</groupId>
         <artifactId>build-qa</artifactId>
         <version>0.0.1-SNAPSHOT</version>
         <classifier>resources</classifier>
         <type>zip</type>
         <!-- Make sure this isn't included on any classpath -->
         <scope>provided</scope>
      </dependency>
   </dependencies>
   <build>
      <pluginManagement>
         <plugins>
            <plugin>
               <groupId>org.jvnet.jaxb2.maven2</groupId>
               <artifactId>maven-jaxb2-plugin</artifactId>
               <version>${plugin.jaxb2.jvnet.version}</version>
            </plugin>
            <plugin>
               <groupId>org.codehaus.mojo</groupId>
               <artifactId>jaxb2-maven-plugin</artifactId>
               <version>${plugin.jaxb2.codehaus.version}</version>
            </plugin>
         </plugins>
      </pluginManagement>
      <plugins>
         <!-- Unit tests -->
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
               <!-- Includes unit tests. Unit test named *Test By convention -->
               <includes>
                  <include>**/*Test.java</include>
               </includes>
               <!-- Excludes integration tests. Integration Test named *IT by convention -->
               <excludes>
                  <exclude>**/*IT.java</exclude>
               </excludes>
               <!-- Skips unit tests if the value of skip.unit.tests property is true -->
               <skipTests>${skip.unit.tests}</skipTests>
            </configuration>
         </plugin>
         <!-- Integration tests -->
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <executions>
               <!-- Ensures that both integration-test and verify goals of the Failsafe Maven plugin 
                  are executed. -->
               <execution>
                  <id>integration-tests</id>
                  <goals>
                     <goal>integration-test</goal>
                     <goal>verify</goal>
                  </goals>
                  <configuration>
                     <argLine>${failsafe.agent.argLine} ${failsafe.jvm.args}</argLine>
                     <excludes>
                        <exclude>**/*Test.java</exclude>
                     </excludes>
                     <includes>
                        <include>**/*IT.java</include>
                     </includes>
                     <!-- Skips integration tests if the value of skip.integration.tests property is 
                        true -->
                     <skipTests>${skip.integration.tests}</skipTests>
                  </configuration>
               </execution>
            </executions>
         </plugin>
         <!-- Jacoco -->
         <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
         </plugin>
         <!-- Extract Qa Dependencies -->
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
               <execution>
                  <id>unpack-shared-resources</id>
                  <phase>initialize</phase>
                  <goals>
                     <goal>unpack-dependencies</goal>
                  </goals>
                  <configuration>
                     <outputDirectory>${project.build.directory}/generated-config</outputDirectory>
                     <includeGroupIds>net.rlviana.build</includeGroupIds>
                     <includeArtifacIds>build-qa</includeArtifacIds>
                     <excludeTransitive>true</excludeTransitive>
                     <overWriteIfNewer>true</overWriteIfNewer>
                  </configuration>
               </execution>
            </executions>
         </plugin>
      </plugins>
   </build>
   <modules>
      <module>pricegrabber-model</module>
      <module>pricegrabber-domain</module>
      <module>pricegrabber-converter</module>
   </modules>
</project>